digraph {
	"asyncio.coroutines.coroutine.wrapper"
	"asyncio.coroutines.coroutine.coro"
	"aiohttp.client_reqrep.ClientRequest.send"
	"gcloud.aio.core.aio._call_later"
	"gcloud.aio.core.aio.call_later"
	"aiohttp.connector.TCPConnector._create_proxy_connection"
	"aiohttp.connector.BaseConnector.connect"
	"aiohttp.connector.TCPConnector._create_connection"
	"gcloud.aio.core.aio.maybe_async"
	"gcloud.aio.core.astate.AwaitableState.__init__"
	"gcloud.aio.core.aio.fire"
	"aiohttp.connector.TCPConnector._create_connection" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"gcloud.aio.core.aio.maybe_async" -> "asyncio.coroutines.coroutine.wrapper"
	"aiohttp.connector.BaseConnector.connect" -> "aiohttp.connector.TCPConnector._create_connection"
	"asyncio.coroutines.coroutine.wrapper" -> "asyncio.coroutines.coroutine.coro"
	"gcloud.aio.core.aio.maybe_async" -> "aiohttp.connector.TCPConnector._create_connection"
	"gcloud.aio.core.aio.fire" -> "gcloud.aio.core.aio.maybe_async"
	"gcloud.aio.core.aio._call_later" -> "gcloud.aio.core.aio.fire"
	"gcloud.aio.core.astate.AwaitableState.__init__" -> "gcloud.aio.core.aio.fire"
	"gcloud.aio.core.aio.maybe_async" -> "aiohttp.connector.BaseConnector.connect"
	"gcloud.aio.core.aio.maybe_async" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.TCPConnector._create_connection"
	"gcloud.aio.core.aio.call_later" -> "gcloud.aio.core.aio.fire"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.BaseConnector.connect"
	"aiohttp.connector.TCPConnector._create_proxy_connection" -> "aiohttp.client_reqrep.ClientRequest.send"
}
