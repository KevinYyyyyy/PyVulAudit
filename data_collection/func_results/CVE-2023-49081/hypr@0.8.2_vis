digraph {
	"asyncio.coroutines.coroutine.coro"
	"aiohttp.client_reqrep.ClientRequest.send"
	"hypr.providers.base.Provider.local_dispatcher"
	"aiohttp.connector.TCPConnector._create_proxy_connection"
	"hypr.providers.base.Provider._execute_checkpoints"
	"aiohttp.connector.BaseConnector.connect"
	"aiohttp.connector.TCPConnector._create_connection"
	"asyncio.coroutines.coroutine.wrapper"
	"hypr.providers.base.Provider._call_meth"
	"aiohttp.connector.TCPConnector._create_connection" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"aiohttp.connector.BaseConnector.connect" -> "aiohttp.connector.TCPConnector._create_connection"
	"asyncio.coroutines.coroutine.wrapper" -> "asyncio.coroutines.coroutine.coro"
	"hypr.providers.base.Provider._call_meth" -> "asyncio.coroutines.coroutine.wrapper"
	"asyncio.coroutines.coroutine.coro" -> "hypr.providers.base.Provider._execute_checkpoints"
	"asyncio.coroutines.coroutine.coro" -> "hypr.providers.base.Provider._call_meth"
	"hypr.providers.base.Provider._call_meth" -> "aiohttp.connector.TCPConnector._create_connection"
	"hypr.providers.base.Provider.local_dispatcher" -> "hypr.providers.base.Provider._execute_checkpoints"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.TCPConnector._create_connection"
	"hypr.providers.base.Provider._call_meth" -> "aiohttp.connector.BaseConnector.connect"
	"hypr.providers.base.Provider._call_meth" -> "aiohttp.connector.TCPConnector._create_proxy_connection"
	"hypr.providers.base.Provider.local_dispatcher" -> "hypr.providers.base.Provider._call_meth"
	"asyncio.coroutines.coroutine.coro" -> "hypr.providers.base.Provider.local_dispatcher"
	"asyncio.coroutines.coroutine.coro" -> "aiohttp.connector.BaseConnector.connect"
	"aiohttp.connector.TCPConnector._create_proxy_connection" -> "aiohttp.client_reqrep.ClientRequest.send"
	"hypr.providers.base.Provider._execute_checkpoints" -> "hypr.providers.base.Provider._call_meth"
}
