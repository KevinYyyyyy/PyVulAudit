digraph {
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5ForConditionalGeneration.prepare_inputs_for_generation"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention.setup"
	"EasyDel.modules.palm.modelling_palm_flax.PalmPretrainedModel.__call__"
	"EasyDel.modules.flax_modelling_utils"
	"EasyDel.modules.t5.modelling_t5_flax"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._concatenate_to_cache"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention.__call__"
	"jax._src.api.value_and_grad"
	"EasyDel.utils"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.init_weights"
	"jax._src.numpy.lax_numpy.apply_along_axis"
	"EasyDel.serve.torch_serve.PyTorchServer.load"
	"jax._src.numpy.lax_numpy.concatenate"
	"subprocess.run"
	"EasyDel.rlhf.ppo"
	"chex._src.dataclass"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptForCausalLM.prepare_inputs_for_generation"
	"EasyDel.serve.jax_serve.JAXServer.process"
	"jax._src.numpy.tensor_contractions.matmul"
	"pandas.core.arrays.string_"
	jax
	"EasyDel.serve.jax_serve.JAXServer.get_memory"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention.__call__"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.LTSelfAttention.__call__"
	"transformers.models.auto.configuration_auto.AutoConfig.from_pretrained"
	"jax._src.numpy.lax_numpy._argmax"
	"pandas.core.frame"
	pandas
	"transformers.utils.hub.download_url"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForSequenceClassificationModule.__call__"
	"flax.linen.attention.make_causal_mask"
	"EasyDel.modules.palm.modelling_palm_flax.ParallelPalmBlock.__call__"
	"jax.experimental.pjit"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention._concatenate_to_cache"
	"EasyDel.trainer.fsdp_train.fsdp_train_step"
	"jax._src.random.uniform"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention.setup"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTForCausalLMModule.__call__"
	"EasyDel.modules.opt"
	"EasyDel.modules.llama.modelling_llama_flax.repeat_kv"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTModelModule.build_alibi"
	"jax._src.sharding_impls"
	"jax._src.numpy.lax_numpy._arange"
	"EasyDel.modules.falcon"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJForCausalLM.prepare_inputs_for_generation"
	"EasyDel.modules.mistral.modelling_mistral_flax"
	"EasyDel.transform.falcon"
	"EasyDel.trainer.config"
	"EasyDel.trainer.training_utils.predict"
	"EasyDel.modules.mistral"
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.configure_functions"
	"EasyDel.rlhf.utils.masked_entropy"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.__call__"
	"EasyDel.transform"
	datasets
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralModule.setup"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.init_weights"
	"EasyDel.trainer.training_utils.get_training_modules"
	"EasyDel.modules.flax_modelling_utils.repeat_kv_bnsh"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconRotaryEmbedding.__call__"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTPretrainedModel.__call__"
	"EasyDel.rlhf.trainer.RLHFTrainer.learn"
	"jax._src.core.concrete_or_error"
	"EasyDel.modules.palm.modelling_palm_flax"
	"EasyDel.modules.llama"
	"EasyDel.rlhf.utils.masked_kl_div"
	"EasyDel.modules.palm"
	"huggingface_hub.file_download.http_get"
	"EasyDel.serve.jax_serve"
	"flax.traverse_util"
	"jax._src.random._check_prng_key"
	"pandas.core.indexes.base"
	"EasyDel.serve.jax_serve.JAXServer.forward_instruct_non_api"
	"jax._src.prng.random_seed"
	"EasyDel.modules.flax_modelling_utils.precompute_freq_cis"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5EncoderModel.__call__"
	"EasyDel.modules.flax_modelling_utils.repeat_kv_bsnh"
	"EasyDel.utils.utils"
	"pandas.core.tools.numeric"
	"EasyDel.utils.tensor_utils"
	"jax._src.prng.random_wrap"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaEmbedding.__call__"
	"jax._src.numpy.lax_numpy.split"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5LayerNorm.__call__"
	"EasyDel.modules.falcon.modelling_falcon_flax._rotate_half"
	"jax._src.api_util._ensure_index_tuple"
	"flax.linen.module._get_unbound_fn"
	"EasyDel.transform.llama"
	"jax._src.numpy.lax_numpy.array"
	"jax._src.numpy.ufuncs.power"
	pydantic
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._relative_position_bucket"
	"EasyDel.modules.flax_modelling_utils.rotate_half"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.init_weights"
	"jax._src.numpy.lax_numpy.pad"
	"gradio.components"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaModule.setup"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.init_cache"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention._concatenate_to_cache"
	"pandas.core.indexes.multi.MultiIndex.astype"
	transformers
	"jax._src.random.PRNGKey"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.init_cache"
	"jax._src.core.EvalTrace.process_primitive"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.init_cache"
	"EasyDel.modules.falcon.modelling_falcon_flax"
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.init_functions"
	"EasyDel.serve.torch_serve"
	"EasyDel.transform.utils"
	"EasyDel.serve.jax_serve.JAXServer.compile"
	"jax.version._version_from_git_tree"
	"pandas.compat"
	"EasyDel.modules.lucid_transformer"
	"jax._src.numpy.lax_numpy.asarray"
	"jax._src.numpy.reductions.mean"
	chex
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.init_cache"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention.compute_bias"
	"EasyDel.modules.palm.modelling_palm_flax.apply_rotary_embedding"
	"EasyDel.modules.mistral.modelling_mistral_flax.MistralRMSNorm.__call__"
	"EasyDel.transform.mistral"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention.__call__"
	"jax._src.numpy.reductions.max"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.concatenate_to_cache_"
	"jax._src.numpy.lax_numpy.arange"
	"EasyDel.rlhf.utils"
	"jax._src.core.Primitive.bind_with_trace"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTModelModule.__call__"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.init_weights"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.__call__"
	"EasyDel.rlhf.reward"
	"EasyDel.modules"
	"EasyDel.modules.palm.modelling_palm_flax.pre_compute_freq_cis"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralForCausalLM.prepare_inputs_for_generation"
	"EasyDel.rlhf.utils.masked_normalize"
	"EasyDel.rlhf.utils.masked_mean"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention.setup"
	"jax._src.numpy.lax_numpy.expand_dims"
	"jax._src.numpy.lax_numpy._split"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXAttention.__call__"
	"jax._src.numpy.lax_numpy.repeat"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.rotate_every_two"
	"jax._src.numpy.lax_numpy._repeat"
	"jax._src.numpy.lax_numpy.argmax"
	"EasyDel.modules.mistral.modelling_mistral_flax._make_sliding_window_causal_mask"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention.split_head"
	"EasyDel.modules.llama.modelling_llama_flax"
	"EasyDel.transform.falcon.falcon_from_pretrained"
	"EasyDel.serve.utils.shard_params"
	"numpy.core.fromnumeric.cumsum"
	"pandas._typing"
	"EasyDel.serve.jax_serve.JAXServer.forward_instruct"
	"EasyDel.trainer.training_utils"
	"EasyDel.serve.jax_serve.JAXServer.forward_chat_non_api"
	"EasyDel.modules.falcon.modelling_falcon_flax.built_bloom_alibi"
	"EasyDel.transform.mpt.mpt_convert_flax_to_pt_7b"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXAttention.setup"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.__call__"
	"inspect.signature"
	"jax._src.error_check"
	"EasyDel.modules.palm.modelling_palm_flax.PalmModule.setup"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.init_weights"
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.__init__"
	"jax._src.source_info_util"
	"EasyDel.rlhf.ppo.ActorCritic.__call__"
	"EasyDel.trainer"
	"subprocess.Popen.communicate"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.__call__"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.apply_rotary_pos_emb"
	"EasyDel.modules.falcon.modelling_falcon_flax.precompute_falcon_freq_cis"
	"flax.training.train_state"
	"EasyDel.rlhf.trainer.RLHFTrainer.learn.forward"
	"flax.linen"
	"jax.version._get_version_string"
	"pandas.core.dtypes.common.pandas_dtype"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXPretrainedModel.__call__"
	"jax._src.numpy.lax_numpy.reshape"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForCausalLM.prepare_inputs_for_generation"
	"transformers.processing_utils"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.init_cache"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptModule.setup"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.init_weights"
	"EasyDel.rlhf.ppo.ActorCritic.generate"
	"EasyDel.trainer.fsdp_train.predict"
	"EasyDel.serve"
	"transformers.configuration_utils.PretrainedConfig.get_config_dict"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention._concatenate_to_cache"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.apply_rotary_emb"
	"EasyDel.transform.mpt.mpt_convert_flax_to_pt_1b"
	"jax._src.numpy.lax_numpy.tile"
	"EasyDel.serve.jax_serve.JAXServer.load_from_params"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconModule.setup"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.__call__"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.init_cache"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax"
	"EasyDel.trainer.training_utils.fsdp_eval_step.calculate_loss"
	"jax._src.core.Primitive.bind"
	"jax._src.numpy.reductions._ensure_optional_axes"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.__call__"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention.apply_rotary"
	"jax._src.numpy.ufuncs.log"
	"transformers.configuration_utils.PretrainedConfig.from_pretrained"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5ForConditionalGeneration.decode"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.create_sinusoidal_positions"
	"pandas.core.dtypes.dtypes"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention._concatenate_to_cache"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralForCausalLMModule.__call__"
	"numpy.core.fromnumeric.argsort"
	"gradio.routes.App.create_app"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention.__call__"
	"EasyDel.rlhf.trainer"
	"datasets.arrow_dataset"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.t_rotary"
	"jax._src.random.split"
	"jax.version"
	"EasyDel.utils.tensor_utils.pt2jax"
	"EasyDel.serve.jax_serve.JAXServer.process_gradio_chat"
	"EasyDel.serve.jax_serve.JAXServer.__init__"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention.__call__"
	"EasyDel.modules.gpt_j"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptModule.__call__"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.__call__"
	"EasyDel.rlhf.utils.clipped_value_loss"
	"EasyDel.trainer.training_utils.fsdp_eval_step"
	"EasyDel.modules.mosaic_mpt"
	"pydantic.fields"
	"EasyDel.trainer.fsdp_train.calculate_accuracy"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.init_cache"
	"jax._src.numpy.lax_numpy.clip"
	"EasyDel.rlhf.utils.shift"
	"jax._src.lax.slicing.dynamic_update_slice"
	"EasyDel.serve.jax_serve.JAXServer.forward_chat"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJForCausalLMModule.__call__"
	"jax._src.numpy.reductions.sum"
	typing_extensions
	"EasyDel.transform.mistral.mistral_from_pretrained"
	"jax._src.numpy.lax_numpy.stack"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention._concatenate_to_cache"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.prepare_inputs_for_generation"
	"flax.struct"
	"EasyDel.modules.llama.modelling_llama_flax.RMSNorm.__call__"
	"EasyDel.transform.llama.llama_from_pretrained"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTForCausalLM.prepare_inputs_for_generation"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax"
	"EasyDel.modules.t5"
	"pandas.core.arrays.base"
	"jax._src.core.Primitive._true_bind"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.RMSNorm.__call__"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.__call__"
	EasyDel
	"jax._src.numpy.lax_numpy._pad_func"
	"EasyDel.smi.smi.get_mem"
	"EasyDel.trainer.training_utils.fsdp_train_step"
	"EasyDel.modules.flax_modelling_utils.apply_rotary_pos_emb"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._create_position_bias"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralRotaryEmbedding.__call__"
	"jax._src.random._key"
	"gradio.routes.mount_gradio_app"
	"numpy.core.fromnumeric._wrapfunc"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForCausalLMModule.__call__"
	"EasyDel.serve.torch_serve.PyTorchServer.__init__"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaBlockCollection.__call__"
	"gradio.components.scatter_plot"
	"pandas.core.generic"
	"jax._src.numpy.error._set_error_if_nan"
	"transformers.models.auto.tokenization_auto.AutoTokenizer.from_pretrained"
	"EasyDel.trainer.fsdp_train"
	gradio
	"pandas.api.types"
	"EasyDel.transform.mpt"
	"EasyDel.serve.jax_serve.JAXServer.load"
	"transformers.configuration_utils.PretrainedConfig._get_config_dict"
	"numpy.core.fromnumeric.transpose"
	"EasyDel.serve.jax_serve.JAXServer.process_gradio_instruct"
	"jax._src.api._allow_deprecated_jit_signature.wrapped"
	"matplotlib.lines"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconModule.__call__"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.precompute_freqs_cis"
	"EasyDel.modules.palm.modelling_palm_flax.RMSNorm.__call__"
	"EasyDel.rlhf.trainer.RLHFTrainer.configure_funcs"
	"EasyDel.smi"
	"EasyDel.rlhf.reward.RewardModel.__call__"
	"flax.linen.module.Module.apply"
	"EasyDel.smi.smi.run"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.encode"
	"EasyDel.modules.gpt_neo_x"
	"EasyDel.utils.tensor_utils.np2jax"
	"flax.linen.module"
	"jax._src.random._gamma_impl"
	"EasyDel.serve.utils"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention.__call__"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.build_alibi"
	"EasyDel.modules.falcon.modelling_falcon_flax.apply_rotary_pos_embedding"
	"EasyDel.smi.smi"
	"EasyDel.modules.opt.modelling_opt_flax"
	"EasyDel.serve.jax_serve.JAXServer.status"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.decode"
	"jax._src.numpy.tensor_contractions.matmul" -> "numpy.core.fromnumeric.argsort"
	"transformers.utils.hub.download_url" -> "huggingface_hub.file_download.http_get"
	"jax.version._version_from_git_tree" -> "subprocess.Popen.communicate"
	"inspect.signature" -> "pandas.core.indexes.base"
	"EasyDel.modules.palm.modelling_palm_flax.apply_rotary_embedding" -> "pandas.core.indexes.multi.MultiIndex.astype"
	"EasyDel.modules.palm.modelling_palm_flax.RMSNorm.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.serve.utils.shard_params" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.rlhf.utils.shift" -> "jax._src.numpy.lax_numpy.pad"
	"EasyDel.modules.flax_modelling_utils.repeat_kv_bnsh" -> "jax._src.numpy.lax_numpy.repeat"
	"EasyDel.serve.jax_serve.JAXServer.forward_instruct_non_api" -> "EasyDel.serve.jax_serve.JAXServer.forward_instruct"
	"transformers.models.auto.tokenization_auto.AutoTokenizer.from_pretrained" -> "transformers.models.auto.configuration_auto.AutoConfig.from_pretrained"
	"jax._src.numpy.lax_numpy._split" -> "jax._src.core.concrete_or_error"
	"EasyDel.modules.mistral" -> "EasyDel.modules.mistral.modelling_mistral_flax"
	"jax._src.numpy.lax_numpy.asarray" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.rlhf.trainer.RLHFTrainer.learn" -> "EasyDel.rlhf.trainer.RLHFTrainer.learn.forward"
	"matplotlib.lines" -> "pandas.core.frame"
	"pandas.api.types" -> "pandas.core.dtypes.dtypes"
	gradio -> "gradio.components"
	"EasyDel.transform.mpt.mpt_convert_flax_to_pt_7b" -> "numpy.core.fromnumeric.transpose"
	"EasyDel.modules.flax_modelling_utils" -> "flax.linen"
	"EasyDel.modules.llama.modelling_llama_flax" -> "flax.traverse_util"
	"chex._src.dataclass" -> typing_extensions
	jax -> "jax.version"
	"flax.struct" -> typing_extensions
	"jax._src.core.Primitive._true_bind" -> "jax._src.core.Primitive.bind_with_trace"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJForCausalLM.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention.__call__" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.modules.palm.modelling_palm_flax.PalmModule.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaEmbedding.__call__" -> "EasyDel.modules.flax_modelling_utils.apply_rotary_pos_emb"
	"jax._src.random.PRNGKey" -> "jax._src.random._key"
	"numpy.core.fromnumeric.transpose" -> "numpy.core.fromnumeric._wrapfunc"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.rlhf.trainer.RLHFTrainer.configure_funcs" -> "jax.experimental.pjit"
	"EasyDel.modules.palm.modelling_palm_flax" -> chex
	"EasyDel.trainer.fsdp_train.calculate_accuracy" -> "jax._src.numpy.lax_numpy.argmax"
	"EasyDel.rlhf.reward.RewardModel.__call__" -> "jax._src.numpy.reductions.sum"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconModule.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptModule.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.trainer.training_utils.fsdp_eval_step.calculate_loss" -> "jax._src.numpy.reductions.mean"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.numpy.lax_numpy.repeat" -> "jax._src.numpy.lax_numpy._repeat"
	"subprocess.Popen.communicate" -> "pandas._typing"
	"jax._src.numpy.reductions._ensure_optional_axes" -> "jax._src.core.concrete_or_error"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5EncoderModel.__call__" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.trainer.config" -> jax
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForCausalLM.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.transform" -> "EasyDel.transform.mistral"
	"EasyDel.trainer.training_utils.fsdp_train_step" -> "jax._src.api.value_and_grad"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.RMSNorm.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.init_weights" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.serve.jax_serve.JAXServer.process_gradio_instruct" -> "EasyDel.serve.jax_serve.JAXServer.process"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralRotaryEmbedding.__call__" -> "EasyDel.modules.flax_modelling_utils.apply_rotary_pos_emb"
	"jax._src.numpy.ufuncs.log" -> "jax._src.numpy.error._set_error_if_nan"
	"EasyDel.modules.t5.modelling_t5_flax" -> chex
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTModelModule.__call__" -> "EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTModelModule.build_alibi"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention.__call__" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.modules" -> "EasyDel.modules.llama"
	"pandas._typing" -> "pandas.core.dtypes.dtypes"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconModule.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.rlhf.utils.masked_mean" -> "jax._src.numpy.reductions.sum"
	pydantic -> "pydantic.fields"
	"jax._src.numpy.lax_numpy.array" -> "jax._src.numpy.lax_numpy.stack"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralForCausalLMModule.__call__" -> "flax.linen.module.Module.apply"
	"jax._src.random.split" -> "jax._src.random._check_prng_key"
	"gradio.routes.mount_gradio_app" -> "gradio.routes.App.create_app"
	"gradio.components.scatter_plot" -> "pandas.api.types"
	"EasyDel.trainer.fsdp_train" -> datasets
	"jax._src.numpy.lax_numpy.stack" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.transform.mpt" -> transformers
	"EasyDel.modules.lucid_transformer" -> "EasyDel.modules.lucid_transformer.modelling_lt_flax"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax" -> chex
	"jax._src.sharding_impls" -> "jax._src.source_info_util"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"flax.linen.module" -> typing_extensions
	"pandas.core.arrays.string_" -> "pandas._typing"
	"EasyDel.modules.falcon" -> "EasyDel.modules.falcon.modelling_falcon_flax"
	"EasyDel.rlhf.ppo" -> "flax.linen"
	"jax._src.numpy.reductions.max" -> "jax._src.numpy.reductions._ensure_optional_axes"
	"jax._src.lax.slicing.dynamic_update_slice" -> "jax._src.core.Primitive.bind"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXAttention.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.modules.t5" -> "EasyDel.modules.t5.modelling_t5_flax"
	"EasyDel.transform.llama.llama_from_pretrained" -> "transformers.configuration_utils.PretrainedConfig.from_pretrained"
	"jax._src.api.value_and_grad" -> "jax._src.core.concrete_or_error"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.apply_rotary_pos_emb" -> "EasyDel.modules.gpt_j.modelling_gpt_j_flax.rotate_every_two"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention.__call__" -> "EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention.split_head"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTAttention.setup" -> "flax.linen.attention.make_causal_mask"
	"jax._src.numpy.lax_numpy.tile" -> "jax._src.numpy.lax_numpy.reshape"
	"flax.linen.attention.make_causal_mask" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.concatenate_to_cache_" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax" -> chex
	"EasyDel.smi.smi.get_mem" -> "subprocess.run"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"pandas.compat" -> "pandas._typing"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.init_cache" -> "jax._src.random.PRNGKey"
	"EasyDel.rlhf.utils.masked_normalize" -> "EasyDel.rlhf.utils.masked_mean"
	"pandas.core.arrays.string_" -> "pandas.core.arrays.base"
	"huggingface_hub.file_download.http_get" -> "inspect.signature"
	"pandas.core.indexes.multi.MultiIndex.astype" -> "pandas.core.dtypes.common.pandas_dtype"
	"EasyDel.serve.jax_serve.JAXServer.compile" -> "EasyDel.serve.jax_serve.JAXServer.process"
	"EasyDel.utils" -> "EasyDel.utils.utils"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTModelModule.build_alibi" -> "jax._src.numpy.lax_numpy.arange"
	"numpy.core.fromnumeric._wrapfunc" -> "matplotlib.lines"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTForCausalLMModule.__call__" -> "flax.linen.module.Module.apply"
	"gradio.components" -> "gradio.components.scatter_plot"
	"jax._src.api._allow_deprecated_jit_signature.wrapped" -> "inspect.signature"
	"inspect.signature" -> "pandas.core.generic"
	"EasyDel.serve.torch_serve.PyTorchServer.load" -> "transformers.models.auto.tokenization_auto.AutoTokenizer.from_pretrained"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mistral.modelling_mistral_flax" -> chex
	EasyDel -> "EasyDel.utils"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptModule.setup" -> "EasyDel.modules.mosaic_mpt.modelling_mpt_flax.build_alibi"
	"EasyDel.modules.palm.modelling_palm_flax.pre_compute_freq_cis" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.numpy.reductions.sum" -> "jax._src.numpy.reductions._ensure_optional_axes"
	"EasyDel.serve.jax_serve.JAXServer.process_gradio_chat" -> "EasyDel.serve.jax_serve.JAXServer.process"
	"EasyDel.trainer" -> "EasyDel.trainer.fsdp_train"
	"EasyDel.trainer.fsdp_train.predict" -> "jax._src.numpy.lax_numpy.argmax"
	"EasyDel.modules.llama.modelling_llama_flax.RMSNorm.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.rlhf.ppo.ActorCritic.generate" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTForCausalLM.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.serve.jax_serve.JAXServer.__init__" -> "gradio.routes.mount_gradio_app"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.random._gamma_impl" -> "jax._src.api._allow_deprecated_jit_signature.wrapped"
	"EasyDel.trainer.training_utils.fsdp_eval_step" -> "EasyDel.trainer.training_utils.fsdp_eval_step.calculate_loss"
	transformers -> "transformers.processing_utils"
	"EasyDel.rlhf.utils.masked_kl_div" -> "EasyDel.rlhf.utils.masked_mean"
	"EasyDel.modules.flax_modelling_utils.repeat_kv_bsnh" -> "jax._src.numpy.lax_numpy.repeat"
	"EasyDel.modules.llama.modelling_llama_flax" -> chex
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention.__call__" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.transform.mpt.mpt_convert_flax_to_pt_1b" -> "numpy.core.fromnumeric.transpose"
	"EasyDel.modules.palm" -> "EasyDel.modules.palm.modelling_palm_flax"
	"jax._src.prng.random_seed" -> "jax._src.core.Primitive.bind"
	typing_extensions -> "inspect.signature"
	"EasyDel.serve.jax_serve.JAXServer.process" -> "jax._src.numpy.lax_numpy.concatenate"
	"EasyDel.serve.jax_serve.JAXServer.forward_instruct" -> "EasyDel.serve.jax_serve.JAXServer.process"
	chex -> "chex._src.dataclass"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention.__call__" -> "jax._src.numpy.lax_numpy.split"
	"jax._src.numpy.lax_numpy._argmax" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.modules.opt.modelling_opt_flax" -> chex
	"EasyDel.modules.flax_modelling_utils.precompute_freq_cis" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.random._check_prng_key" -> "jax._src.prng.random_wrap"
	"numpy.core.fromnumeric.cumsum" -> "numpy.core.fromnumeric._wrapfunc"
	"jax._src.random.uniform" -> "jax._src.random._check_prng_key"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention.__call__" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.palm.modelling_palm_flax.ParallelPalmBlock.__call__" -> "numpy.core.fromnumeric.cumsum"
	"jax._src.numpy.reductions.mean" -> "jax._src.numpy.reductions._ensure_optional_axes"
	"EasyDel.modules.flax_modelling_utils.rotate_half" -> "jax._src.numpy.lax_numpy.concatenate"
	"EasyDel.modules.gpt_j" -> "EasyDel.modules.gpt_j.modelling_gpt_j_flax"
	"jax._src.numpy.lax_numpy.argmax" -> "jax._src.numpy.lax_numpy._argmax"
	"EasyDel.rlhf.trainer.RLHFTrainer.learn.forward" -> "jax._src.api.value_and_grad"
	"EasyDel.modules.llama.modelling_llama_flax.repeat_kv" -> "jax._src.numpy.lax_numpy.repeat"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.create_sinusoidal_positions" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5LayerNorm.__call__" -> "jax._src.numpy.ufuncs.power"
	"jax._src.core.Primitive.bind" -> "jax._src.core.Primitive._true_bind"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.__call__" -> "jax._src.numpy.lax_numpy.expand_dims"
	"EasyDel.smi.smi.run" -> "subprocess.run"
	"jax._src.api_util._ensure_index_tuple" -> "jax._src.core.concrete_or_error"
	"EasyDel.serve.torch_serve" -> gradio
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconRotaryEmbedding.__call__" -> "jax._src.numpy.lax_numpy.tile"
	"jax._src.numpy.lax_numpy.arange" -> "jax._src.numpy.lax_numpy._arange"
	"EasyDel.transform.mistral.mistral_from_pretrained" -> "transformers.configuration_utils.PretrainedConfig.from_pretrained"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention.compute_bias" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.smi.smi" -> jax
	"flax.linen.module._get_unbound_fn" -> "inspect.signature"
	"EasyDel.rlhf.ppo.ActorCritic.__call__" -> "EasyDel.rlhf.utils.masked_mean"
	"jax.version._get_version_string" -> "jax.version._version_from_git_tree"
	"pandas.core.dtypes.common.pandas_dtype" -> "pandas.core.arrays.string_"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.core.EvalTrace.process_primitive" -> "jax._src.random._gamma_impl"
	"jax._src.numpy.lax_numpy.reshape" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.rlhf.utils.masked_entropy" -> "EasyDel.rlhf.utils.masked_mean"
	"subprocess.run" -> "pandas._typing"
	"jax._src.core.Primitive.bind_with_trace" -> "jax._src.core.EvalTrace.process_primitive"
	"jax._src.numpy.lax_numpy.clip" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.serve.jax_serve.JAXServer.get_memory" -> "EasyDel.smi.smi.get_mem"
	"EasyDel.utils.tensor_utils" -> jax
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.__call__" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.LTSelfAttention.__call__" -> "jax._src.numpy.tensor_contractions.matmul"
	"jax._src.numpy.lax_numpy._arange" -> "jax._src.core.concrete_or_error"
	"EasyDel.serve.torch_serve.PyTorchServer.__init__" -> "gradio.routes.mount_gradio_app"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForCausalLMModule.__call__" -> "flax.linen.module.Module.apply"
	"pydantic.fields" -> "inspect.signature"
	"EasyDel.modules.falcon.modelling_falcon_flax.precompute_falcon_freq_cis" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralForCausalLM.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaBlockCollection.__call__" -> "jax._src.random.uniform"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5ForConditionalGeneration.decode" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconPretrainedModel.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.serve.jax_serve.JAXServer.load" -> "EasyDel.serve.jax_serve.JAXServer.__init__"
	"EasyDel.trainer.fsdp_train.fsdp_train_step" -> "jax._src.api.value_and_grad"
	"transformers.configuration_utils.PretrainedConfig._get_config_dict" -> "transformers.utils.hub.download_url"
	"EasyDel.transform.llama" -> transformers
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJForCausalLMModule.__call__" -> "flax.linen.module.Module.apply"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.init_weights" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaPreTrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.trainer.training_utils" -> "flax.training.train_state"
	"EasyDel.transform.falcon" -> transformers
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJAttention.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.serve.jax_serve" -> gradio
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.FlaxGPTNeoXAttention.__call__" -> "EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.apply_rotary_emb"
	"jax._src.numpy.lax_numpy._pad_func" -> "jax._src.numpy.lax_numpy.apply_along_axis"
	"pandas.core.arrays.base" -> "pandas.core.dtypes.dtypes"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaModule.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.serve.jax_serve.JAXServer.load_from_params" -> "EasyDel.serve.jax_serve.JAXServer.__init__"
	"transformers.models.auto.configuration_auto.AutoConfig.from_pretrained" -> "transformers.configuration_utils.PretrainedConfig.get_config_dict"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax" -> chex
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.init_functions" -> "EasyDel.trainer.fsdp_train.CausalLMTrainer.configure_functions"
	"matplotlib.lines" -> "pandas.core.tools.numeric"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.init_weights" -> "jax._src.random.split"
	"pandas.core.indexes.base" -> "pandas.core.dtypes.dtypes"
	"jax.version" -> "jax.version._get_version_string"
	"jax._src.numpy.lax_numpy._repeat" -> "jax._src.core.concrete_or_error"
	"jax._src.random._key" -> "jax._src.prng.random_seed"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.decode" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.rotate_every_two" -> "jax._src.numpy.lax_numpy.stack"
	"EasyDel.serve.utils" -> pydantic
	"pandas.core.frame" -> "pandas.core.dtypes.dtypes"
	"EasyDel.modules.opt" -> "EasyDel.modules.opt.modelling_opt_flax"
	"jax._src.numpy.ufuncs.power" -> "jax._src.numpy.error._set_error_if_nan"
	"jax._src.numpy.error._set_error_if_nan" -> "jax._src.error_check"
	"jax.experimental.pjit" -> "jax._src.sharding_impls"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralModule.setup" -> "flax.linen.attention.make_causal_mask"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5PreTrainedModel.encode" -> "jax._src.numpy.lax_numpy.array"
	"flax.linen.module.Module.apply" -> "flax.linen.module._get_unbound_fn"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._create_position_bias" -> "EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention.compute_bias"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.init_weights" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.prng.random_wrap" -> "jax._src.core.Primitive.bind"
	"subprocess.run" -> "pandas.core.generic"
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5ForConditionalGeneration.prepare_inputs_for_generation" -> "jax._src.lax.slicing.dynamic_update_slice"
	"EasyDel.rlhf.utils.clipped_value_loss" -> "jax._src.numpy.reductions.max"
	"EasyDel.serve.jax_serve.JAXServer.forward_chat_non_api" -> "EasyDel.serve.jax_serve.JAXServer.forward_chat"
	"EasyDel.smi" -> "EasyDel.smi.smi"
	"EasyDel.modules.flax_modelling_utils.apply_rotary_pos_emb" -> "EasyDel.modules.flax_modelling_utils.rotate_half"
	"EasyDel.transform.utils" -> "flax.traverse_util"
	"EasyDel.modules.opt.modelling_opt_flax.FlaxOPTPreTrainedModel.__call__" -> "jax._src.numpy.lax_numpy.array"
	"EasyDel.modules.falcon.modelling_falcon_flax.built_bloom_alibi" -> "jax._src.numpy.lax_numpy.arange"
	"datasets.arrow_dataset" -> pandas
	"EasyDel.transform.falcon.falcon_from_pretrained" -> "transformers.configuration_utils.PretrainedConfig.from_pretrained"
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.configure_functions" -> "jax.experimental.pjit"
	"jax._src.core.concrete_or_error" -> "jax.version._version_from_git_tree"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mistral.modelling_mistral_flax.MistralRMSNorm.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"transformers.configuration_utils.PretrainedConfig.get_config_dict" -> "transformers.configuration_utils.PretrainedConfig._get_config_dict"
	"pandas.core.generic" -> "pandas.core.dtypes.dtypes"
	"numpy.core.fromnumeric.argsort" -> "numpy.core.fromnumeric._wrapfunc"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptAttention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"pandas.core.tools.numeric" -> "pandas.core.dtypes.dtypes"
	"jax._src.numpy.lax_numpy.pad" -> "jax._src.numpy.lax_numpy._pad_func"
	"jax._src.numpy.lax_numpy.expand_dims" -> "jax._src.api_util._ensure_index_tuple"
	pandas -> "pandas.compat"
	"EasyDel.modules.gpt_neo_x" -> "EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.build_alibi" -> "jax._src.numpy.tensor_contractions.matmul"
	"EasyDel.modules.falcon.modelling_falcon_flax.FlaxFalconAttention.split_head" -> "jax._src.numpy.lax_numpy.split"
	"EasyDel.serve.jax_serve.JAXServer.forward_chat" -> "EasyDel.serve.jax_serve.JAXServer.process"
	"EasyDel.rlhf.utils" -> jax
	"EasyDel.modules.lucid_transformer.modelling_lt_flax.FlaxLTPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.array"
	"transformers.configuration_utils.PretrainedConfig.from_pretrained" -> "transformers.configuration_utils.PretrainedConfig.get_config_dict"
	"EasyDel.modules.falcon.modelling_falcon_flax._rotate_half" -> "jax._src.numpy.lax_numpy.concatenate"
	"pandas.core.dtypes.dtypes" -> "EasyDel.serve.jax_serve.JAXServer.__init__"
	"EasyDel.utils.tensor_utils.pt2jax" -> "EasyDel.utils.tensor_utils.np2jax"
	"flax.linen" -> "flax.linen.module"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralAttention.t_rotary" -> "EasyDel.modules.flax_modelling_utils.repeat_kv_bnsh"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.init_weights" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.transform.mistral" -> transformers
	"EasyDel.modules.mosaic_mpt" -> "EasyDel.modules.mosaic_mpt.modelling_mpt_flax"
	"EasyDel.modules.gpt_j.modelling_gpt_j_flax.FlaxGPTJPreTrainedModel.init_weights" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.trainer.fsdp_train.CausalLMTrainer.__init__" -> "EasyDel.trainer.fsdp_train.CausalLMTrainer.init_functions"
	"EasyDel.modules.llama" -> "EasyDel.modules.llama.modelling_llama_flax"
	"EasyDel.utils.tensor_utils.np2jax" -> "jax._src.numpy.lax_numpy.asarray"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.apply_rotary_emb" -> "pandas.core.indexes.multi.MultiIndex.astype"
	"EasyDel.serve.jax_serve.JAXServer.status" -> "EasyDel.smi.smi.get_mem"
	"EasyDel.modules.mistral.modelling_mistral_flax.FlaxMistralPretrainedModel.init_cache" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax" -> chex
	"EasyDel.modules.t5.modelling_t5_flax.FlaxT5Attention._relative_position_bucket" -> "jax._src.numpy.ufuncs.log"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention._concatenate_to_cache" -> "jax._src.numpy.lax_numpy.arange"
	"jax._src.error_check" -> jax
	"EasyDel.modules.palm.modelling_palm_flax.PalmPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.asarray"
	"jax._src.numpy.lax_numpy.apply_along_axis" -> "jax.version._version_from_git_tree"
	"transformers.processing_utils" -> typing_extensions
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptForCausalLM.prepare_inputs_for_generation" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.trainer.training_utils.predict" -> "jax._src.numpy.lax_numpy.argmax"
	"EasyDel.trainer.training_utils.get_training_modules" -> "jax.experimental.pjit"
	"EasyDel.serve" -> "EasyDel.serve.utils"
	"EasyDel.utils.utils" -> jax
	"flax.training.train_state" -> "flax.struct"
	"jax._src.numpy.lax_numpy.split" -> "jax._src.numpy.lax_numpy._split"
	"EasyDel.modules.mistral.modelling_mistral_flax._make_sliding_window_causal_mask" -> "jax._src.numpy.ufuncs.log"
	"flax.traverse_util" -> "flax.struct"
	"jax._src.numpy.lax_numpy.concatenate" -> "jax._src.numpy.lax_numpy.asarray"
	"jax._src.source_info_util" -> "jax.version"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaAttention.apply_rotary" -> "EasyDel.modules.flax_modelling_utils.repeat_kv_bnsh"
	"EasyDel.modules.gpt_neo_x.modelling_gpt_neo_x_flax.precompute_freqs_cis" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.modules.falcon.modelling_falcon_flax.apply_rotary_pos_embedding" -> "EasyDel.modules.falcon.modelling_falcon_flax._rotate_half"
	datasets -> "datasets.arrow_dataset"
	"EasyDel.modules.llama.modelling_llama_flax.FlaxLlamaForSequenceClassificationModule.__call__" -> "jax._src.numpy.lax_numpy.clip"
	"EasyDel.rlhf.reward" -> "flax.linen"
	"EasyDel.modules.mosaic_mpt.modelling_mpt_flax.FlaxMptPretrainedModel.__call__" -> "jax._src.numpy.lax_numpy.arange"
	"EasyDel.rlhf.trainer" -> "flax.struct"
	"EasyDel.modules.falcon.modelling_falcon_flax" -> chex
}
