digraph {
	"requests.sessions.Session.post"
	"requests.adapters.HTTPAdapter.send"
	"requests.sessions.Session.get"
	"requests.sessions.Session.head"
	"urllib3.util.url._encode_invalid_chars"
	"requests.models.Request.prepare"
	"requests.sessions.Session.options"
	"requests.models.PreparedRequest.prepare"
	"urllib3.poolmanager.proxy_from_url"
	"urllib3.poolmanager.ProxyManager.__init__"
	"requests.sessions.Session.put"
	"requests.models.PreparedRequest.prepare_url"
	"requests.sessions.Session.request"
	"requests.adapters.HTTPAdapter.proxy_manager_for"
	"requests.adapters.HTTPAdapter.get_connection"
	"requests.sessions.Session.delete"
	"requests.sessions.Session.patch"
	"requests.sessions.Session.prepare_request"
	"urllib3.util.url.parse_url"
	"requests.sessions.Session.put" -> "requests.sessions.Session.request"
	"urllib3.util.url.parse_url" -> "urllib3.util.url._encode_invalid_chars"
	"requests.sessions.Session.post" -> "requests.sessions.Session.request"
	"requests.sessions.Session.prepare_request" -> "requests.models.PreparedRequest.prepare"
	"requests.sessions.Session.request" -> "requests.sessions.Session.prepare_request"
	"requests.models.PreparedRequest.prepare_url" -> "urllib3.util.url.parse_url"
	"requests.sessions.Session.head" -> "requests.sessions.Session.request"
	"requests.models.Request.prepare" -> "requests.models.PreparedRequest.prepare"
	"requests.sessions.Session.get" -> "requests.sessions.Session.request"
	"urllib3.poolmanager.proxy_from_url" -> "urllib3.poolmanager.ProxyManager.__init__"
	"urllib3.poolmanager.ProxyManager.__init__" -> "urllib3.util.url.parse_url"
	"requests.sessions.Session.delete" -> "requests.sessions.Session.request"
	"requests.adapters.HTTPAdapter.send" -> "requests.adapters.HTTPAdapter.get_connection"
	"requests.models.PreparedRequest.prepare" -> "requests.models.PreparedRequest.prepare_url"
	"requests.sessions.Session.patch" -> "requests.sessions.Session.request"
	"requests.sessions.Session.options" -> "requests.sessions.Session.request"
	"requests.adapters.HTTPAdapter.get_connection" -> "urllib3.util.url.parse_url"
	"requests.adapters.HTTPAdapter.proxy_manager_for" -> "urllib3.poolmanager.proxy_from_url"
}
